<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JeffreyKroonen\BolRetailer\Generated\Normalizer;

use Jane\Component\JsonSchemaRuntime\Reference;
use JeffreyKroonen\BolRetailer\Generated\Runtime\Normalizer\CheckArray;
use JeffreyKroonen\BolRetailer\Generated\Runtime\Normalizer\ValidatorTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class AudioTracksNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    use ValidatorTrait;

    public function supportsDenormalization($data, $type, $format = null): bool
    {
        return $type === 'JeffreyKroonen\\BolRetailer\\Generated\\Model\\AudioTracks';
    }

    public function supportsNormalization($data, $format = null): bool
    {
        return $data instanceof \JeffreyKroonen\BolRetailer\Generated\Model\AudioTracks;
    }

    /**
     * @return mixed
     */
    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \JeffreyKroonen\BolRetailer\Generated\Model\AudioTracks();
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('discNumber', $data)) {
            $object->setDiscNumber($data['discNumber']);
        }
        if (\array_key_exists('trackNumber', $data)) {
            $object->setTrackNumber($data['trackNumber']);
        }
        if (\array_key_exists('discSide', $data)) {
            $object->setDiscSide($data['discSide']);
        }
        if (\array_key_exists('title', $data)) {
            $object->setTitle($data['title']);
        }
        if (\array_key_exists('artistName', $data)) {
            $object->setArtistName($data['artistName']);
        }
        if (\array_key_exists('playTime', $data)) {
            $object->setPlayTime($data['playTime']);
        }
        if (\array_key_exists('clipUrl', $data)) {
            $object->setClipUrl($data['clipUrl']);
        }
        if (\array_key_exists('clipType', $data)) {
            $object->setClipType($data['clipType']);
        }

        return $object;
    }

    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = [])
    {
        $data = [];
        if ($object->isInitialized('discNumber') && null !== $object->getDiscNumber()) {
            $data['discNumber'] = $object->getDiscNumber();
        }
        if ($object->isInitialized('trackNumber') && null !== $object->getTrackNumber()) {
            $data['trackNumber'] = $object->getTrackNumber();
        }
        if ($object->isInitialized('discSide') && null !== $object->getDiscSide()) {
            $data['discSide'] = $object->getDiscSide();
        }
        if ($object->isInitialized('title') && null !== $object->getTitle()) {
            $data['title'] = $object->getTitle();
        }
        if ($object->isInitialized('artistName') && null !== $object->getArtistName()) {
            $data['artistName'] = $object->getArtistName();
        }
        if ($object->isInitialized('playTime') && null !== $object->getPlayTime()) {
            $data['playTime'] = $object->getPlayTime();
        }
        if ($object->isInitialized('clipUrl') && null !== $object->getClipUrl()) {
            $data['clipUrl'] = $object->getClipUrl();
        }
        if ($object->isInitialized('clipType') && null !== $object->getClipType()) {
            $data['clipType'] = $object->getClipType();
        }

        return $data;
    }
}

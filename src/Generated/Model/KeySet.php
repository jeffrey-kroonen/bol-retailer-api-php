<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JeffreyKroonen\BolRetailer\Generated\Model;

class KeySet
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Key identifier. Maps to the keyId value in the signature header of the push request.
     *
     * @var string
     */
    protected $id;
    /**
     * Key encryption type.
     *
     * @var string
     */
    protected $type;
    /**
     * The Base64 encoded public key to use when verifying the signature.
     *
     * @var string
     */
    protected $publicKey;

    /**
     * Key identifier. Maps to the keyId value in the signature header of the push request.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Key identifier. Maps to the keyId value in the signature header of the push request.
     */
    public function setId(string $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * Key encryption type.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * Key encryption type.
     */
    public function setType(string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * The Base64 encoded public key to use when verifying the signature.
     */
    public function getPublicKey(): string
    {
        return $this->publicKey;
    }

    /**
     * The Base64 encoded public key to use when verifying the signature.
     */
    public function setPublicKey(string $publicKey): self
    {
        $this->initialized['publicKey'] = true;
        $this->publicKey = $publicKey;

        return $this;
    }
}

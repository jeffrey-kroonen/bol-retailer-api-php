<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JeffreyKroonen\BolRetailer\Generated\Model;

class Countries
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Countries in which this offer is currently on sale in the webshop, in ISO-3166-1 format.
     *
     * @var string
     */
    protected $countryCode;
    /**
     * Minimum number of estimated sales expectations on the bol.com platform.
     *
     * @var float
     */
    protected $minimum;
    /**
     * Maximum number of estimated sales expectations on the bol.com platform.
     *
     * @var float
     */
    protected $maximum;

    /**
     * Countries in which this offer is currently on sale in the webshop, in ISO-3166-1 format.
     */
    public function getCountryCode(): string
    {
        return $this->countryCode;
    }

    /**
     * Countries in which this offer is currently on sale in the webshop, in ISO-3166-1 format.
     */
    public function setCountryCode(string $countryCode): self
    {
        $this->initialized['countryCode'] = true;
        $this->countryCode = $countryCode;

        return $this;
    }

    /**
     * Minimum number of estimated sales expectations on the bol.com platform.
     */
    public function getMinimum(): float
    {
        return $this->minimum;
    }

    /**
     * Minimum number of estimated sales expectations on the bol.com platform.
     */
    public function setMinimum(float $minimum): self
    {
        $this->initialized['minimum'] = true;
        $this->minimum = $minimum;

        return $this;
    }

    /**
     * Maximum number of estimated sales expectations on the bol.com platform.
     */
    public function getMaximum(): float
    {
        return $this->maximum;
    }

    /**
     * Maximum number of estimated sales expectations on the bol.com platform.
     */
    public function setMaximum(float $maximum): self
    {
        $this->initialized['maximum'] = true;
        $this->maximum = $maximum;

        return $this;
    }
}

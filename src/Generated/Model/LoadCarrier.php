<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JeffreyKroonen\BolRetailer\Generated\Model;

class LoadCarrier
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The Serial Shipping Container Code (SSCC) for this load carrier.
     *
     * @var string
     */
    protected $sscc;
    /**
     * The track and trace code for this load carrier.
     *
     * @var string
     */
    protected $transportLabelTrackAndTrace;
    /**
     * The current state of the transport for this load carrier.
     *
     * @var string
     */
    protected $transportState;
    /**
     * The date and time in ISO 8601 format when the latest update for this transport was received.
     *
     * @var \DateTime
     */
    protected $transportStateUpdateDateTime;

    /**
     * The Serial Shipping Container Code (SSCC) for this load carrier.
     */
    public function getSscc(): string
    {
        return $this->sscc;
    }

    /**
     * The Serial Shipping Container Code (SSCC) for this load carrier.
     */
    public function setSscc(string $sscc): self
    {
        $this->initialized['sscc'] = true;
        $this->sscc = $sscc;

        return $this;
    }

    /**
     * The track and trace code for this load carrier.
     */
    public function getTransportLabelTrackAndTrace(): string
    {
        return $this->transportLabelTrackAndTrace;
    }

    /**
     * The track and trace code for this load carrier.
     */
    public function setTransportLabelTrackAndTrace(string $transportLabelTrackAndTrace): self
    {
        $this->initialized['transportLabelTrackAndTrace'] = true;
        $this->transportLabelTrackAndTrace = $transportLabelTrackAndTrace;

        return $this;
    }

    /**
     * The current state of the transport for this load carrier.
     */
    public function getTransportState(): string
    {
        return $this->transportState;
    }

    /**
     * The current state of the transport for this load carrier.
     */
    public function setTransportState(string $transportState): self
    {
        $this->initialized['transportState'] = true;
        $this->transportState = $transportState;

        return $this;
    }

    /**
     * The date and time in ISO 8601 format when the latest update for this transport was received.
     */
    public function getTransportStateUpdateDateTime(): \DateTime
    {
        return $this->transportStateUpdateDateTime;
    }

    /**
     * The date and time in ISO 8601 format when the latest update for this transport was received.
     */
    public function setTransportStateUpdateDateTime(\DateTime $transportStateUpdateDateTime): self
    {
        $this->initialized['transportStateUpdateDateTime'] = true;
        $this->transportStateUpdateDateTime = $transportStateUpdateDateTime;

        return $this;
    }
}

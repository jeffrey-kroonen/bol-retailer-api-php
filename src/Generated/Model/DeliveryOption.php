<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JeffreyKroonen\BolRetailer\Generated\Model;

class DeliveryOption
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Unique identifier for the shipping label offer.
     *
     * @var string
     */
    protected $shippingLabelOfferId;
    /**
     * Indicates whether this delivery option is recommended to be the best option to ship your order item(s) with.
     *
     * @var bool
     */
    protected $recommended;
    /**
     * The date until the delivery option (incl total price) is valid.
     *
     * @var \DateTime
     */
    protected $validUntilDate;
    /**
     * A code representing the transporter which is being used for transportation.
     *
     * @var string
     */
    protected $transporterCode;
    /**
     * The type of the label, representing the way an item is being transported. MAILBOX is a mailbox package with delivery scan. MAILBOX_LIGHT is a mailbox package without delivery scan. PARCEL is a normal package.
     *
     * @var string
     */
    protected $labelType;
    /**
     * The display name of the shipping label.
     *
     * @var string
     */
    protected $labelDisplayName;
    /**
     * @var LabelPrice
     */
    protected $labelPrice;
    /**
     * @var PackageRestrictions
     */
    protected $packageRestrictions;
    /**
     * @var HandoverDetails
     */
    protected $handoverDetails;

    /**
     * Unique identifier for the shipping label offer.
     */
    public function getShippingLabelOfferId(): string
    {
        return $this->shippingLabelOfferId;
    }

    /**
     * Unique identifier for the shipping label offer.
     */
    public function setShippingLabelOfferId(string $shippingLabelOfferId): self
    {
        $this->initialized['shippingLabelOfferId'] = true;
        $this->shippingLabelOfferId = $shippingLabelOfferId;

        return $this;
    }

    /**
     * Indicates whether this delivery option is recommended to be the best option to ship your order item(s) with.
     */
    public function getRecommended(): bool
    {
        return $this->recommended;
    }

    /**
     * Indicates whether this delivery option is recommended to be the best option to ship your order item(s) with.
     */
    public function setRecommended(bool $recommended): self
    {
        $this->initialized['recommended'] = true;
        $this->recommended = $recommended;

        return $this;
    }

    /**
     * The date until the delivery option (incl total price) is valid.
     */
    public function getValidUntilDate(): \DateTime
    {
        return $this->validUntilDate;
    }

    /**
     * The date until the delivery option (incl total price) is valid.
     */
    public function setValidUntilDate(\DateTime $validUntilDate): self
    {
        $this->initialized['validUntilDate'] = true;
        $this->validUntilDate = $validUntilDate;

        return $this;
    }

    /**
     * A code representing the transporter which is being used for transportation.
     */
    public function getTransporterCode(): string
    {
        return $this->transporterCode;
    }

    /**
     * A code representing the transporter which is being used for transportation.
     */
    public function setTransporterCode(string $transporterCode): self
    {
        $this->initialized['transporterCode'] = true;
        $this->transporterCode = $transporterCode;

        return $this;
    }

    /**
     * The type of the label, representing the way an item is being transported. MAILBOX is a mailbox package with delivery scan. MAILBOX_LIGHT is a mailbox package without delivery scan. PARCEL is a normal package.
     */
    public function getLabelType(): string
    {
        return $this->labelType;
    }

    /**
     * The type of the label, representing the way an item is being transported. MAILBOX is a mailbox package with delivery scan. MAILBOX_LIGHT is a mailbox package without delivery scan. PARCEL is a normal package.
     */
    public function setLabelType(string $labelType): self
    {
        $this->initialized['labelType'] = true;
        $this->labelType = $labelType;

        return $this;
    }

    /**
     * The display name of the shipping label.
     */
    public function getLabelDisplayName(): string
    {
        return $this->labelDisplayName;
    }

    /**
     * The display name of the shipping label.
     */
    public function setLabelDisplayName(string $labelDisplayName): self
    {
        $this->initialized['labelDisplayName'] = true;
        $this->labelDisplayName = $labelDisplayName;

        return $this;
    }

    public function getLabelPrice(): LabelPrice
    {
        return $this->labelPrice;
    }

    public function setLabelPrice(LabelPrice $labelPrice): self
    {
        $this->initialized['labelPrice'] = true;
        $this->labelPrice = $labelPrice;

        return $this;
    }

    public function getPackageRestrictions(): PackageRestrictions
    {
        return $this->packageRestrictions;
    }

    public function setPackageRestrictions(PackageRestrictions $packageRestrictions): self
    {
        $this->initialized['packageRestrictions'] = true;
        $this->packageRestrictions = $packageRestrictions;

        return $this;
    }

    public function getHandoverDetails(): HandoverDetails
    {
        return $this->handoverDetails;
    }

    public function setHandoverDetails(HandoverDetails $handoverDetails): self
    {
        $this->initialized['handoverDetails'] = true;
        $this->handoverDetails = $handoverDetails;

        return $this;
    }
}

<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JeffreyKroonen\BolRetailer\Generated\Model;

class ReducedReturnItem
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The RMA (Return Merchandise Authorization) identifier of the return.
     *
     * @var string
     */
    protected $rmaId;
    /**
     * The id of the customer order this return item is in.
     *
     * @var string
     */
    protected $orderId;
    /**
     * The EAN number associated with this product.
     *
     * @var string
     */
    protected $ean;
    /**
     * The quantity that is expected to be returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order.
     *
     * @var int
     */
    protected $expectedQuantity;
    /**
     * The reason why the customer returned this product.
     *
     * @var ReturnReason
     */
    protected $returnReason;
    /**
     * Indicates if this return item has been handled (by the retailer).
     *
     * @var bool
     */
    protected $handled;
    /**
     * @var ReturnProcessingResult[]
     */
    protected $processingResults;

    /**
     * The RMA (Return Merchandise Authorization) identifier of the return.
     */
    public function getRmaId(): string
    {
        return $this->rmaId;
    }

    /**
     * The RMA (Return Merchandise Authorization) identifier of the return.
     */
    public function setRmaId(string $rmaId): self
    {
        $this->initialized['rmaId'] = true;
        $this->rmaId = $rmaId;

        return $this;
    }

    /**
     * The id of the customer order this return item is in.
     */
    public function getOrderId(): string
    {
        return $this->orderId;
    }

    /**
     * The id of the customer order this return item is in.
     */
    public function setOrderId(string $orderId): self
    {
        $this->initialized['orderId'] = true;
        $this->orderId = $orderId;

        return $this;
    }

    /**
     * The EAN number associated with this product.
     */
    public function getEan(): string
    {
        return $this->ean;
    }

    /**
     * The EAN number associated with this product.
     */
    public function setEan(string $ean): self
    {
        $this->initialized['ean'] = true;
        $this->ean = $ean;

        return $this;
    }

    /**
     * The quantity that is expected to be returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order.
     */
    public function getExpectedQuantity(): int
    {
        return $this->expectedQuantity;
    }

    /**
     * The quantity that is expected to be returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order.
     */
    public function setExpectedQuantity(int $expectedQuantity): self
    {
        $this->initialized['expectedQuantity'] = true;
        $this->expectedQuantity = $expectedQuantity;

        return $this;
    }

    /**
     * The reason why the customer returned this product.
     */
    public function getReturnReason(): ReturnReason
    {
        return $this->returnReason;
    }

    /**
     * The reason why the customer returned this product.
     */
    public function setReturnReason(ReturnReason $returnReason): self
    {
        $this->initialized['returnReason'] = true;
        $this->returnReason = $returnReason;

        return $this;
    }

    /**
     * Indicates if this return item has been handled (by the retailer).
     */
    public function getHandled(): bool
    {
        return $this->handled;
    }

    /**
     * Indicates if this return item has been handled (by the retailer).
     */
    public function setHandled(bool $handled): self
    {
        $this->initialized['handled'] = true;
        $this->handled = $handled;

        return $this;
    }

    /**
     * @return ReturnProcessingResult[]
     */
    public function getProcessingResults(): array
    {
        return $this->processingResults;
    }

    /**
     * @param ReturnProcessingResult[] $processingResults
     */
    public function setProcessingResults(array $processingResults): self
    {
        $this->initialized['processingResults'] = true;
        $this->processingResults = $processingResults;

        return $this;
    }
}

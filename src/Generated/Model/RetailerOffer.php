<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JeffreyKroonen\BolRetailer\Generated\Model;

class RetailerOffer
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Unique identifier for an offer.
     *
     * @var string
     */
    protected $offerId;
    /**
     * The EAN number associated with this product. Note: in case an ISBN is provided, the ISBN will be replaced with the actual EAN belonging to this ISBN.
     *
     * @var string
     */
    protected $ean;
    /**
     * A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 20 characters.
     *
     * @var string
     */
    protected $reference;
    /**
     * Indicates whether or not you want to put this offer for sale on the bol.com website. Defaults to false.
     *
     * @var bool
     */
    protected $onHoldByRetailer;
    /**
     * In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.
     *
     * @var string
     */
    protected $unknownProductTitle;
    /**
     * @var Pricing
     */
    protected $pricing;
    /**
     * @var Stock
     */
    protected $stock;
    /**
     * @var Fulfilment
     */
    protected $fulfilment;
    /**
     * @var Store
     */
    protected $store;
    /**
     * @var Condition
     */
    protected $condition;
    /**
     * @var NotPublishableReason[]
     */
    protected $notPublishableReasons;

    /**
     * Unique identifier for an offer.
     */
    public function getOfferId(): string
    {
        return $this->offerId;
    }

    /**
     * Unique identifier for an offer.
     */
    public function setOfferId(string $offerId): self
    {
        $this->initialized['offerId'] = true;
        $this->offerId = $offerId;

        return $this;
    }

    /**
     * The EAN number associated with this product. Note: in case an ISBN is provided, the ISBN will be replaced with the actual EAN belonging to this ISBN.
     */
    public function getEan(): string
    {
        return $this->ean;
    }

    /**
     * The EAN number associated with this product. Note: in case an ISBN is provided, the ISBN will be replaced with the actual EAN belonging to this ISBN.
     */
    public function setEan(string $ean): self
    {
        $this->initialized['ean'] = true;
        $this->ean = $ean;

        return $this;
    }

    /**
     * A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 20 characters.
     */
    public function getReference(): string
    {
        return $this->reference;
    }

    /**
     * A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 20 characters.
     */
    public function setReference(string $reference): self
    {
        $this->initialized['reference'] = true;
        $this->reference = $reference;

        return $this;
    }

    /**
     * Indicates whether or not you want to put this offer for sale on the bol.com website. Defaults to false.
     */
    public function getOnHoldByRetailer(): bool
    {
        return $this->onHoldByRetailer;
    }

    /**
     * Indicates whether or not you want to put this offer for sale on the bol.com website. Defaults to false.
     */
    public function setOnHoldByRetailer(bool $onHoldByRetailer): self
    {
        $this->initialized['onHoldByRetailer'] = true;
        $this->onHoldByRetailer = $onHoldByRetailer;

        return $this;
    }

    /**
     * In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.
     */
    public function getUnknownProductTitle(): string
    {
        return $this->unknownProductTitle;
    }

    /**
     * In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.
     */
    public function setUnknownProductTitle(string $unknownProductTitle): self
    {
        $this->initialized['unknownProductTitle'] = true;
        $this->unknownProductTitle = $unknownProductTitle;

        return $this;
    }

    public function getPricing(): Pricing
    {
        return $this->pricing;
    }

    public function setPricing(Pricing $pricing): self
    {
        $this->initialized['pricing'] = true;
        $this->pricing = $pricing;

        return $this;
    }

    public function getStock(): Stock
    {
        return $this->stock;
    }

    public function setStock(Stock $stock): self
    {
        $this->initialized['stock'] = true;
        $this->stock = $stock;

        return $this;
    }

    public function getFulfilment(): Fulfilment
    {
        return $this->fulfilment;
    }

    public function setFulfilment(Fulfilment $fulfilment): self
    {
        $this->initialized['fulfilment'] = true;
        $this->fulfilment = $fulfilment;

        return $this;
    }

    public function getStore(): Store
    {
        return $this->store;
    }

    public function setStore(Store $store): self
    {
        $this->initialized['store'] = true;
        $this->store = $store;

        return $this;
    }

    public function getCondition(): Condition
    {
        return $this->condition;
    }

    public function setCondition(Condition $condition): self
    {
        $this->initialized['condition'] = true;
        $this->condition = $condition;

        return $this;
    }

    /**
     * @return NotPublishableReason[]
     */
    public function getNotPublishableReasons(): array
    {
        return $this->notPublishableReasons;
    }

    /**
     * @param NotPublishableReason[] $notPublishableReasons
     */
    public function setNotPublishableReasons(array $notPublishableReasons): self
    {
        $this->initialized['notPublishableReasons'] = true;
        $this->notPublishableReasons = $notPublishableReasons;

        return $this;
    }
}

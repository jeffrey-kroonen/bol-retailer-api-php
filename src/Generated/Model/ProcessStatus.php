<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JeffreyKroonen\BolRetailer\Generated\Model;

class ProcessStatus
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The process status id.
     *
     * @var string
     */
    protected $processStatusId;
    /**
     * The id of the object being processed. For example, in case of a shipment process id, you will receive the id of the order item being processed.
     *
     * @var string
     */
    protected $entityId;
    /**
     * Name of the requested action that is being processed.
     *
     * @var string
     */
    protected $eventType;
    /**
     * Describes the action that is being processed.
     *
     * @var string
     */
    protected $description;
    /**
     * Status of the action being processed.
     *
     * @var string
     */
    protected $status;
    /**
     * Shows error message if applicable.
     *
     * @var string
     */
    protected $errorMessage;
    /**
     * Time of creation of the response.
     *
     * @var \DateTime
     */
    protected $createTimestamp;
    /**
     * Lists available actions applicable to this endpoint.
     *
     * @var Link[]
     */
    protected $links;

    /**
     * The process status id.
     */
    public function getProcessStatusId(): string
    {
        return $this->processStatusId;
    }

    /**
     * The process status id.
     */
    public function setProcessStatusId(string $processStatusId): self
    {
        $this->initialized['processStatusId'] = true;
        $this->processStatusId = $processStatusId;

        return $this;
    }

    /**
     * The id of the object being processed. For example, in case of a shipment process id, you will receive the id of the order item being processed.
     */
    public function getEntityId(): string
    {
        return $this->entityId;
    }

    /**
     * The id of the object being processed. For example, in case of a shipment process id, you will receive the id of the order item being processed.
     */
    public function setEntityId(string $entityId): self
    {
        $this->initialized['entityId'] = true;
        $this->entityId = $entityId;

        return $this;
    }

    /**
     * Name of the requested action that is being processed.
     */
    public function getEventType(): string
    {
        return $this->eventType;
    }

    /**
     * Name of the requested action that is being processed.
     */
    public function setEventType(string $eventType): self
    {
        $this->initialized['eventType'] = true;
        $this->eventType = $eventType;

        return $this;
    }

    /**
     * Describes the action that is being processed.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Describes the action that is being processed.
     */
    public function setDescription(string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    /**
     * Status of the action being processed.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Status of the action being processed.
     */
    public function setStatus(string $status): self
    {
        $this->initialized['status'] = true;
        $this->status = $status;

        return $this;
    }

    /**
     * Shows error message if applicable.
     */
    public function getErrorMessage(): string
    {
        return $this->errorMessage;
    }

    /**
     * Shows error message if applicable.
     */
    public function setErrorMessage(string $errorMessage): self
    {
        $this->initialized['errorMessage'] = true;
        $this->errorMessage = $errorMessage;

        return $this;
    }

    /**
     * Time of creation of the response.
     */
    public function getCreateTimestamp(): \DateTime
    {
        return $this->createTimestamp;
    }

    /**
     * Time of creation of the response.
     */
    public function setCreateTimestamp(\DateTime $createTimestamp): self
    {
        $this->initialized['createTimestamp'] = true;
        $this->createTimestamp = $createTimestamp;

        return $this;
    }

    /**
     * Lists available actions applicable to this endpoint.
     *
     * @return Link[]
     */
    public function getLinks(): array
    {
        return $this->links;
    }

    /**
     * Lists available actions applicable to this endpoint.
     *
     * @param Link[] $links
     */
    public function setLinks(array $links): self
    {
        $this->initialized['links'] = true;
        $this->links = $links;

        return $this;
    }
}

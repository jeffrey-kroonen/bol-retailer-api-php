<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JeffreyKroonen\BolRetailer\Generated\Model;

class Condition
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The condition of the offered product.
     *
     * @var string
     */
    protected $name;
    /**
     * The category of the condition. If not given NEW or SECONDHAND is derived from NAME.
     *
     * @var string
     */
    protected $category;
    /**
     * The description of the condition of the product. Only allowed if name is not NEW and may not contain e-mail addresses.
     *
     * @var string
     */
    protected $comment;

    /**
     * The condition of the offered product.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * The condition of the offered product.
     */
    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * The category of the condition. If not given NEW or SECONDHAND is derived from NAME.
     */
    public function getCategory(): string
    {
        return $this->category;
    }

    /**
     * The category of the condition. If not given NEW or SECONDHAND is derived from NAME.
     */
    public function setCategory(string $category): self
    {
        $this->initialized['category'] = true;
        $this->category = $category;

        return $this;
    }

    /**
     * The description of the condition of the product. Only allowed if name is not NEW and may not contain e-mail addresses.
     */
    public function getComment(): string
    {
        return $this->comment;
    }

    /**
     * The description of the condition of the product. Only allowed if name is not NEW and may not contain e-mail addresses.
     */
    public function setComment(string $comment): self
    {
        $this->initialized['comment'] = true;
        $this->comment = $comment;

        return $this;
    }
}
